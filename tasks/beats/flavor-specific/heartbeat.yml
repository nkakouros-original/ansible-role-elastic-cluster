---

- name: "{{ beats_flavor }}: Setup Monitors Directory"
  block:
    - name: "{{ beats_flavor }}: Copy monitors directory from Docker container to host"
      command: >
          docker cp {{ beats_flavor }}:{{ beats_heartbeat_monitors_path }} {{ beats_path_config }}

    - name: "{{ beats_flavor }}: Replace Heartbeat installation script"
      copy:
        content: |
          #!/usr/bin/env bash

          docker pull docker.elastic.co/beats/{{ beats_flavor }}:{{ beats_major_version }}.{{ beats_minor_version }}.{{ beats_patch_version }}

          # Remove any existing container
          docker rm -f -v {{ beats_flavor }} || :

          # Run the Beat container
          docker run --network=elastic --user root --cap-add NET_RAW --rm --name={{ beats_flavor }}  \
            -v  {{ beats_certificates_dir }}:{{ beats_certificates_dir }} \
            -v  {{ beats_path_config }}/scripts:{{ beats_path_config }}/scripts \
            -v {{ beats_path_config }}/{{ beats_flavor }}.yml:{{ beats_path_config }}/{{ beats_flavor }}.yml \
            -v {{ beats_path_config }}/fields.yml:{{ beats_path_config }}/fields.yml \
            -v {{ beats_heartbeat_monitors_path }}:{{ beats_heartbeat_monitors_path }} \
            -v {{ beats_path_data }}:{{ beats_path_data }} \
            -v {{ beats_path_logs }}:{{ beats_path_logs }} \
            docker.elastic.co/beats/{{ beats_flavor }}:{{ beats_major_version }}.{{ beats_minor_version }}.{{ beats_patch_version }} \
            -e \
            --strict.perms=false \
            $BEAT_LOG_OPTS $BEAT_CONFIG_OPTS $BEAT_PATH_OPTS
        dest: "/usr/local/bin/{{ beats_flavor }}"
      notify: beats-restart-service

    - name: Run pending handlers now
      meta: flush_handlers

- name: "{{ beats_flavor }}: Upload monitors on Linux"
  block:
    - name: "{{ beats_flavor }}: Upload monitor files on Linux"
      copy:
        src: "{{ _beats__monitor.src }}"
        dest: "{{ beats_heartbeat_monitors_path }}/"
        owner: root
        group: root
        mode: 0o644
      loop: "{{ beats_heartbeat_monitors }}"
      loop_control:
        loop_var: _beats__monitor
      when: _beats__monitor.src is defined

    - name: "{{ beats_flavor }}: Upload inline monitors on Linux"
      copy:
        content: "{{ _beats__monitor.content | to_nice_yaml(indent=2, explicit_start=true) }}"
        dest: "{{ beats_heartbeat_monitors_path }}/{{ _beats__monitor.dest }}"
        owner: root
        group: root
        mode: 0o644
      loop: "{{ beats_heartbeat_monitors }}"
      loop_control:
        loop_var: _beats__monitor
      when: _beats__monitor.src is not defined
  when: ansible_os_family != 'Windows'


- name: "{{ beats_flavor }}: Upload monitors on Windows"
  block:
    - name: "{{ beats_flavor }}: Upload monitor files on Windows"
      win_copy:
        src: "{{ _beats__monitor.src }}"
        dest: "{{ beats_heartbeat_monitors_path }}/"
      loop: "{{ beats_heartbeat_monitors }}"
      loop_control:
        loop_var: _beats__monitor
      when: _beats__monitor.src is defined

    - name: "{{ beats_flavor }}: Upload inline monitors on Windows"
      win_copy:
        content: "{{ _beats__monitor.content }}"
        dest: "{{ beats_heartbeat_monitors_path }}/{{ _beats__monitor.dest }}"
      loop: "{{ beats_heartbeat_monitors }}"
      loop_control:
        loop_var: _beats__monitor
      when: _beats__monitor.src is not defined
  when: ansible_os_family == 'Windows'
