---

- name: "{{ beats_flavor }}: Create inputs directory"
  block:
    - name: "{{ beats_flavor }}: Create inputs directory on Linux"
      file:
        path: "{{ beats_filebeat_inputs_dir }}"
        mode: 0o755
        state: directory
      when: ansible_os_family != 'Windows'

    - name: "{{ beats_flavor }}: Create inputs directory on Windows"
      win_file:
        path: "{{ beats_filebeat_inputs_dir }}"
        state: directory
      when: ansible_os_family == 'Windows'


- name: "{{ beats_flavor }}: Upload inputs"
  block:
    - name: "{{ beats_flavor }}: Upload inputs on Linux"
      template:
        src: "{{ _beats__input_file }}"
        dest: >-
          {{ beats_filebeat_inputs_dir }}/{{
            _beats__input_file | basename | regex_replace('^(.*)[.]j2', '\\1')
          }}
        mode: 0o600
      loop: "{{ beats_filebeat_input_files }}"
      loop_control:
        loop_var: _beats__input_file
      when: ansible_os_family != 'Windows'
      notify: beats-restart-service

    - name: "{{ beats_flavor }}: Upload inputs on Windows"
      win_template:
        src: "{{ _beats__input_file }}"
        dest: >-
          {{ beats_filebeat_input_files }}/{{
            _beats__input_file | basename | regex_replace('^(.*)[.]j2', '\\1')
          }}
      loop: "{{ beats_filebeat_input_files }}"
      loop_control:
        loop_var: _beats__input_file
      when: ansible_os_family == 'Windows'
      notify: beats-restart-service


- name: "{{ beats_flavor }}: Setup Modules Directory"
  block:
    - name: "{{ beats_flavor }}: Copy modules.d directory from Docker container to host"
      command: >
        docker cp {{ beats_flavor }}:{{ beats_filebeat_modules_dir }} {{ beats_filebeat_modules_dir }}

    - name: "{{ beats_flavor }}: Replace Filebeat installation script"
      copy:
        content: |
          #!/usr/bin/env bash

          docker pull docker.elastic.co/beats/{{ beats_flavor }}:{{ beats_major_version }}.{{ beats_minor_version }}.{{ beats_patch_version }}

          # Remove any existing container
          docker rm -f -v {{ beats_flavor }} || :

          # Run the Beat container
          docker run --network host --user root --rm --name={{ beats_flavor }}  \
            -v  "/var/lib/docker/containers:/var/lib/docker/containers:ro" \
            -v  "/var/run/docker.sock:/var/run/docker.sock:ro" \
            -v  {{ beats_certificates_dir }}:{{ beats_certificates_dir }} \
            -v  {{ beats_path_config }}/scripts:{{ beats_path_config }}/scripts \
            -v {{ beats_path_config }}/{{ beats_flavor }}.yml:{{ beats_path_config }}/{{ beats_flavor }}.yml:ro \
            -v {{ beats_path_config }}/fields.yml:{{ beats_path_config }}/fields.yml \
            -v {{ beats_filebeat_inputs_dir }}:{{ beats_filebeat_inputs_dir }} \
            -v {{ beats_filebeat_modules_dir }}:{{ beats_filebeat_modules_dir }} \
            -v {{ beats_path_data }}:{{ beats_path_data }}:rw \
            -v {{ beats_path_logs }}:{{ beats_path_logs }} \
            docker.elastic.co/beats/{{ beats_flavor }}:{{ beats_major_version }}.{{ beats_minor_version }}.{{ beats_patch_version }} filebeat -e --strict.perms=false \
            $BEAT_LOG_OPTS $BEAT_CONFIG_OPTS $BEAT_PATH_OPTS
        dest: "/usr/local/bin/{{ beats_flavor }}"
      notify: beats-restart-service
      
    - name: Run pending handlers now
      meta: flush_handlers

- name: "{{ beats_flavor }}: Upload modules"
  block:
    - name: "{{ beats_flavor }}: Upload modules on Linux"
      template:
        src: "{{ _beats__module }}"
        dest: >-
          {{ beats_filebeat_modules_dir }}/{{
            _beats__module | basename | regex_replace('^(.*)[.]j2', '\\1')
          }}
        mode: 0o644
      loop: "{{ beats_filebeat_module_files }}"
      loop_control:
        loop_var: _beats__module
      when: ansible_os_family != 'Windows'
      notify: beats-restart-service

    - name: "{{ beats_flavor }}: Upload modules on Windows"
      win_template:
        src: "{{ _beats__module }}"
        dest: >-
          {{ beats_filebeat_modules_dir }}/{{
            _beats__module | basename | regex_replace('^(.*)[.]j2', '\\1')
          }}
      loop: "{{ beats_filebeat_module_files }}"
      loop_control:
        loop_var: _beats__module
      when: ansible_os_family == 'Windows'
      notify: beats-restart-service

- name: "{{ beats_flavor }}: Enable filebeat modules on Linux"
  block:
    - name: "{{ beats_flavor }}: Check if filebeat modules are enabled on Linux"
      stat:
        path: "{{ beats_filebeat_modules_dir }}/{{ _beats__module }}.yml"
      register: _beats_filebeat_enabled_modules
      loop: "{{ beats_filebeat_modules }}"
      loop_control:
        loop_var: _beats__module

    - name: "{{ beats_flavor }}: Enable filebeat modules on Linux"
      command: "docker exec {{ beats_flavor }} {{ beats_linux_exec }} modules enable {{ modules_to_enable }}"
      when: modules_to_enable | length > 0
      vars:
        modules_to_enable: >-
          {{
            beats_filebeat_modules
            | reject('in', _beats_filebeat_enabled_modules.results
                           | selectattr('stat.exists')
                           | map(attribute='stat.path')
                           | map('basename')
                           | map('replace', '.yml', '')
            )
            | join(' ')
            | default('', true)
          }}
  when: ansible_os_family != 'Windows'

- name: "{{ beats_flavor }}: Enable filebeat modules on Windows"
  block:
    - name: "{{ beats_flavor }}: Check if filebeat modules are enabled on Windows"
      win_stat:
        path: "{{ beats_filebeat_modules_dir }}/{{ _beats__module }}.yml"
      register: _beats_filebeat_enabled_modules
      loop: "{{ beats_filebeat_modules }}"
      loop_control:
        loop_var: _beats__module

    - name: "{{ beats_flavor }}: Enable filebeat modules on Windows"
      win_command: "{{ beats_win_exec }} modules enable {{ modules_to_enable }}"
      when: modules_to_enable | length > 0
      vars:
        modules_to_enable: >-
          {{
            beats_filebeat_modules
            | reject('in', _beats_filebeat_enabled_modules.results
                           | selectattr('stat.exists')
                           | map(attribute='stat.path')
                           | map('basename')
                           | map('replace', '.yml', '')
            )
            | join(' ')
            | default('', true)
          }}
  when: ansible_os_family == 'Windows'

- name: "{{ beats_flavor }}: Disable filebeat modules on Linux"
  block:
    - name: "{{ beats_flavor }}: Check if filebeat modules are disabled on Linux"
      stat:
        path: "{{ beats_filebeat_modules_dir }}/{{ _beats__module }}.yml"
      register: _beats_filebeat_disabled_modules
      loop: "{{ beats_filebeat_modules }}"
      loop_control:
        loop_var: _beats__module

    - name: "{{ beats_flavor }}: Disable filebeat modules on Linux"
      command: "docker exec {{ beats_flavor }} {{ beats_linux_exec }} modules disable {{ modules_to_disable }}"
      when: modules_to_disable | length > 0
      vars:
        modules_to_disable: >-
          {{
            beats_filebeat_modules_disable
            | reject('in', _beats_filebeat_disabled_modules.results
                           | selectattr('stat.exists')
                           | map(attribute='stat.path')
                           | map('basename')
                           | map('replace', '.yml', '')
            )
            | join(' ')
            | default('', true)
          }}
  when: ansible_os_family != 'Windows'

- name: "{{ beats_flavor }}: Disable filebeat modules on Windows"
  block:
    - name: "{{ beats_flavor }}: Check if filebeat modules are disabled on Windows"
      win_stat:
        path: "{{ beats_filebeat_modules_dir }}/{{ _beats__module }}.yml"
      register: _beats_filebeat_disabled_modules
      loop: "{{ beats_filebeat_modules }}"
      loop_control:
        loop_var: _beats__module

    - name: "{{ beats_flavor }}: Disable filebeat modules on Windows"
      win_command: "{{ beats_win_exec }} modules disable {{ modules_to_disable }}"
      when: modules_to_disable | length > 0
      vars:
        modules_to_disable: >-
          {{
            beats_filebeat_modules_disable
            | reject('in', _beats_filebeat_disabled_modules.results
                           | selectattr('stat.exists')
                           | map(attribute='stat.path')
                           | map('basename')
                           | map('replace', '.yml', '')
            )
            | join(' ')
            | default('', true)
          }}

  when: ansible_os_family == 'Windows'
